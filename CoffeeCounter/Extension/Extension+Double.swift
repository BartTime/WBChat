//
//  Extension+String.swift
//  WBChat
//
//  Created by Александр on 18.06.2024.
//

import Foundation

extension Double {
    /// Возвращает строку, представляющую объем жидкости на основе заданного числа, форматированного для отображения в литрах и миллилитрах.
    ///
    /// Функция форматирует значение типа `Double` в соответствии с правилами:
    /// - Для значений от 100 до 999 включительно, выводит результат с добавлением "мл" в конце.
    /// - Для значений 1000 и выше, выводит результат в формате "X л Y мл", где X - количество полных литров, а Y - оставшееся количество в миллилитрах.
    /// - Если количество миллилитров равно нулю (т.е. значение кратно 1000), выводится только количество литров.
    /// - Для значений меньше 100 возвращает просто числовое значение без единиц измерения.
    ///
    /// Примеры использования:
    /// ```
    /// let volume1: Double = 230
    /// print(volume1.formattedVolume)  // Выведет: "230 мл"
    ///
    /// let volume2: Double = 1000
    /// print(volume2.formattedVolume)  // Выведет: "1 л"
    ///
    /// let volume3: Double = 2050
    /// print(volume3.formattedVolume)  // Выведет: "2 л 050 мл"
    /// ```
    var formattedVolume: String {
        let number = Int(abs(self))  // Преобразуем в целое число и учитываем только положительные значения

        switch number {
        case 100..<1000:
            // Для трехзначных чисел добавляем "мл"
            return "\(number) мл"
        case 1000...:
            // Для чисел больше или равно 1000, форматируем как "X л Y мл"
            let liters = number / 1000       // Получаем количество литров
            let milliliters = number % 1000  // Получаем оставшееся количество миллилитров
            if milliliters == 0 {
                // Если миллилитров нет, выводим только литры
                return "\(liters) л"
            } else {
                // В противном случае, добавляем информацию о миллилитрах
                return "\(liters) л \n\(String(format: "%03d", milliliters)) мл"
            }
        default:
            // Для чисел меньше 100, возвращаем число без форматирования
            return String(format: "%.0f", self)
        }
    }
}
